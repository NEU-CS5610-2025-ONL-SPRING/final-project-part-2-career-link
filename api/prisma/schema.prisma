// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  JOB_SEEKER
  EMPLOYER
}

enum ApplicationStatusEnum {
  APPLIED
  UNDER_REVIEW
  REJECTED
  ACCEPTED
}

model User {
  id         Int      @id @default(autoincrement())
  username   String   @db.VarChar(255)
  email      String   @unique @db.VarChar(255)
  password   String   @db.Text
  role       Role
  resumeUrl  String?
  skills     String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  companyId  Int?
  company    Company? @relation("UserCompany", fields: [companyId], references: [id])

  jobs       Job[]       @relation("PostedJobs")
  applications Application[]
  projects   Project[]
  experiences Experience[]
  education   Education[]
}

model Company {
  id        Int     @id @default(autoincrement())
  name      String  @unique @db.VarChar(255)
  location  String?
  website   String?
  jobs      Job[]
  users     User[]   @relation("UserCompany")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  
}

model Job {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  description String   @db.Text
  companyId   Int
  location    String   @db.VarChar(255)
  salary      Int?
  requirements String  @db.Text
  postedBy    Int

  company     Company  @relation(fields: [companyId], references: [id])
  employer    User     @relation(fields: [postedBy], references: [id], name: "PostedJobs")
  applications Application[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Application {
  id         Int                 @id @default(autoincrement())
  jobId      Int
  userId     Int
  status     ApplicationStatusEnum
  appliedAt  DateTime            @default(now())
  updatedAt  DateTime            @updatedAt

  job        Job     @relation(fields: [jobId], references: [id])
  user       User    @relation(fields: [userId], references: [id])
}

model Project {
  id          Int      @id @default(autoincrement())
  userId      Int
  title       String   @db.VarChar(255)
  description String   @db.Text
  technologies String?
  projectUrl  String?
  startDate   DateTime?
  endDate     DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User     @relation(fields: [userId], references: [id])
}

model Experience {
  id         Int      @id @default(autoincrement())
  userId     Int
  company    String   @db.VarChar(255)
  jobTitle   String   @db.VarChar(255)
  startDate  DateTime
  endDate    DateTime?
  description String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user       User     @relation(fields: [userId], references: [id])
}

model Education {
  id          Int      @id @default(autoincrement())
  userId      Int
  institution String   @db.VarChar(255)
  degree      String   @db.VarChar(255)
  fieldOfStudy String?
  startDate   DateTime
  endDate     DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User     @relation(fields: [userId], references: [id])
}

